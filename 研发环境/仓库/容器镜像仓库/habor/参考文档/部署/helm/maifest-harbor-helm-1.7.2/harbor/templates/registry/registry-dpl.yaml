---
# Source: harbor/templates/registry/registry-dpl.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "habor-harbor-registry"
  labels:
    heritage: Helm
    release: habor
    chart: harbor
    app: "harbor"
    component: registry
  namespace: registry-ctr-habor
spec:
  serviceName: habor-harbor-registry
  replicas: 1
  selector:
    matchLabels:
      release: habor
      app: "harbor"
      component: registry
  template:
    metadata:
      labels:
        heritage: Helm
        release: habor
        chart: harbor
        app: "harbor"
        component: registry
      annotations:
        checksum/configmap: d68b07b58bcfc11d0a2579c38f44fa82893501ed6b89426629549f0ada822066
        checksum/secret: 3b6656a57ea22b4ec0e73a8d0663c14f00c5c329e6fff0fbaa2c61ea661e35e6
        checksum/secret-jobservice: d60fa13feaef1825997ba94d9e0aec0717795704042cd3be316eb0575da11e94
        checksum/secret-core: c7fc152e1c08b0881bc12f1faba0f1d276b34315bfec0f49f7d357e9800114f2
    spec:
      securityContext:
        runAsUser: 10000
        fsGroup: 10000
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 120
      containers:
      - name: registry
        image: goharbor/registry-photon:v2.3.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /
            scheme: HTTP
            port: 5000
          initialDelaySeconds: 300
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            scheme: HTTP
            port: 5000
          initialDelaySeconds: 1
          periodSeconds: 10
        args: ["serve", "/etc/registry/config.yml"]
        envFrom:
        - secretRef:
            name: "habor-harbor-registry"
        env:
        ports:
        - containerPort: 5000
        - containerPort: 5001
        volumeMounts:
        - name: registry-data
          mountPath: /storage
          subPath: 
        - name: registry-htpasswd
          mountPath: /etc/registry/passwd
          subPath: passwd
        - name: registry-config
          mountPath: /etc/registry/config.yml
          subPath: config.yml
      - name: registryctl
        image: goharbor/harbor-registryctl:v2.3.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /api/health
            scheme: HTTP
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            scheme: HTTP
            port: 8080
          initialDelaySeconds: 1
          periodSeconds: 10
        envFrom:
        - secretRef:
            name: "habor-harbor-registry"
        env:
        - name: CORE_SECRET
          valueFrom:
            secretKeyRef:
              name: habor-harbor-core
              key: secret
        - name: JOBSERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: habor-harbor-jobservice
              key: JOBSERVICE_SECRET
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: registry-data
          mountPath: /storage
          subPath: 
        - name: registry-config
          mountPath: /etc/registry/config.yml
          subPath: config.yml
        - name: registry-config
          mountPath: /etc/registryctl/config.yml
          subPath: ctl-config.yml
      volumes:
      - name: registry-htpasswd
        secret:
          secretName: habor-harbor-registry-htpasswd
          items:
            - key: REGISTRY_HTPASSWD
              path: passwd
      - name: registry-config
        configMap:
          name: "habor-harbor-registry"
      - name: registry-data
        persistentVolumeClaim:
          claimName: registry
