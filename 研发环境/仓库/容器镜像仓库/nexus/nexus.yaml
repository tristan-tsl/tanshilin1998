---
# 存储
apiVersion: v1
kind: PersistentVolume
metadata:
  name: registry-nexus
  namespace: registry
spec:
  capacity:
    storage: 100Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /k8slpv/registry/nexus
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - 192.168.90.11
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nexus
  namespace: registry
spec:
  storageClassName: local-storage
  volumeName: registry-nexus
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nexus
  namespace: registry
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
    - host: nexus-registry.local.
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: nexus
                port:
                  number: 80
    - host: ctr-nexus-registry.local.
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: nexus
                port:
                  number: 8091
  tls:
    - hosts:
        - ctr-nexus-registry.local.
      secretName: container
---
# 网络
apiVersion: v1
kind: Service
metadata:
  name: nexus
  namespace: registry
  labels:
    app.kubernetes.io/name: nexus
spec:
  selector:
    app.kubernetes.io/name: nexus
  ports:
    - name: for-8081
      port: 80
      targetPort: 8081
    - name: for-8091
      port: 8091
      targetPort: 8091
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: nexus
  name: nexus
  namespace: registry
spec:
  serviceName: nexus
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nexus
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nexus
    spec:
      restartPolicy: Always
      containers:
        - name: nexus
          image: sonatype/nexus3:3.33.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
              name: http
#          readinessProbe:
#            httpGet:
#              path: /api/health
#              port: http
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 5000m
              memory: 5000Mi
          volumeMounts:
            - mountPath: /nexus-data
              name: nexus
      volumes:
        - name: nexus
          persistentVolumeClaim:
            claimName: nexus