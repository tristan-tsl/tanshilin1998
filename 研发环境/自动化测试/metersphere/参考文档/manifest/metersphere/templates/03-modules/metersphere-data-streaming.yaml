---
# Source: metersphere/templates/03-modules/metersphere-data-streaming.yaml
apiVersion: v1
kind: Service
metadata:
  name: metersphere-data-streaming
  namespace: devops-test-ms
  labels:
    app: metersphere-data-streaming
spec:
  sessionAffinity: ClientIP
  selector:
    app: metersphere-data-streaming
  ports:
    - name: http
      port: 8084
      protocol: TCP
---
# Source: metersphere/templates/03-modules/metersphere-data-streaming.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metersphere-data-streaming
  namespace: devops-test-ms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metersphere-data-streaming
  template:
    metadata:
      labels:
        app: metersphere-data-streaming
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - metersphere-data-streaming
              topologyKey: kubernetes.io/hostname
      initContainers:
        - name: wait-mysql
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              set -ex
              until nc -zv metersphere-mysql 3306; do sleep 5; done
              sleep 10
        - name: wait-kafka
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              set -ex
              until nc -zv metersphere-kafka 9092; do sleep 5; done
              sleep 10
      containers:
        - name: metersphere-data-streaming
          image: metersphere/data-streaming:v1.10
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: 300Mi
              cpu: 100m
            limits:
              memory: 6000Mi
              cpu: 5000m
          ports:
            - name: http
              containerPort: 8084
          volumeMounts:
            - mountPath: /opt/metersphere/conf
              name: opt-metersphere-config
            - mountPath: /opt/metersphere/logs
              name: metersphere-logs
        - name: promtail
          image: ctr-registry.local./ops/promtail:2.2.1
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/promtail/config.yaml
            - -config.expand-env=true
          env:
            - name: TZ
              value: Asia/Shanghai
            - name: ENVIRONMENT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: REPLICASET_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - mountPath: /mnt
              name: metersphere-logs
            - mountPath: /etc/promtail
              name: promtail-config
          resources:
            requests:
              cpu: 50m
              memory: 0.05Gi
              ephemeral-storage: 1Gi
            limits:
              cpu: 500m
              memory: 0.5Gi
              ephemeral-storage: 10Gi
      volumes:
        - configMap:
            defaultMode: 420
            name: metersphere-config
            items:
            - key: data-streaming.properties
              path: metersphere.properties
          name: opt-metersphere-config
        - name: metersphere-logs
          emptyDir: {}
        - name: promtail-config
          configMap:
            name: loki-promtail
